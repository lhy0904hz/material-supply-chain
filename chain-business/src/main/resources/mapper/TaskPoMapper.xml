<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.material.chain.business.mapper.TaskPoMapper">
  <resultMap id="BaseResultMap" type="com.material.chain.business.domain.po.TaskPo">
    <!--@mbg.generated-->
    <!--@Table t_task-->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="department_id" jdbcType="BIGINT" property="departmentId" />
    <result column="task_code" jdbcType="VARCHAR" property="taskCode" />
    <result column="material_total" jdbcType="INTEGER" property="materialTotal" />
    <result column="allocation_status" jdbcType="TINYINT" property="allocationStatus" />
    <result column="finish_status" jdbcType="TINYINT" property="finishStatus" />
    <result column="finish_time" jdbcType="BIGINT" property="finishTime" />
    <result column="create_id" jdbcType="BIGINT" property="createId" />
    <result column="update_id" jdbcType="BIGINT" property="updateId" />
    <result column="create_time" jdbcType="BIGINT" property="createTime" />
    <result column="update_time" jdbcType="BIGINT" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, department_id, task_code, material_total, allocation_status, finish_status, finish_time, 
    create_id, update_id, create_time, update_time
  </sql>
  <update id="updateBatch" parameterType="java.util.List">
    <!--@mbg.generated-->
    update t_task
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="department_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.departmentId,jdbcType=BIGINT}
        </foreach>
      </trim>
      <trim prefix="task_code = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.taskCode,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="material_total = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.materialTotal,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="allocation_status = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.allocationStatus,jdbcType=TINYINT}
        </foreach>
      </trim>
      <trim prefix="finish_status = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.finishStatus,jdbcType=TINYINT}
        </foreach>
      </trim>
      <trim prefix="finish_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.finishTime,jdbcType=BIGINT}
        </foreach>
      </trim>
      <trim prefix="create_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.createId,jdbcType=BIGINT}
        </foreach>
      </trim>
      <trim prefix="update_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.updateId,jdbcType=BIGINT}
        </foreach>
      </trim>
      <trim prefix="create_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.createTime,jdbcType=BIGINT}
        </foreach>
      </trim>
      <trim prefix="update_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.updateTime,jdbcType=BIGINT}
        </foreach>
      </trim>
    </trim>
    where id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.id,jdbcType=BIGINT}
    </foreach>
  </update>
  <update id="updateBatchSelective" parameterType="java.util.List">
    <!--@mbg.generated-->
    update t_task
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="department_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.departmentId != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.departmentId,jdbcType=BIGINT}
          </if>
        </foreach>
      </trim>
      <trim prefix="task_code = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.taskCode != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.taskCode,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="material_total = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.materialTotal != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.materialTotal,jdbcType=INTEGER}
          </if>
        </foreach>
      </trim>
      <trim prefix="allocation_status = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.allocationStatus != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.allocationStatus,jdbcType=TINYINT}
          </if>
        </foreach>
      </trim>
      <trim prefix="finish_status = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.finishStatus != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.finishStatus,jdbcType=TINYINT}
          </if>
        </foreach>
      </trim>
      <trim prefix="finish_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.finishTime != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.finishTime,jdbcType=BIGINT}
          </if>
        </foreach>
      </trim>
      <trim prefix="create_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.createId != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.createId,jdbcType=BIGINT}
          </if>
        </foreach>
      </trim>
      <trim prefix="update_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.updateId != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.updateId,jdbcType=BIGINT}
          </if>
        </foreach>
      </trim>
      <trim prefix="create_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.createTime != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.createTime,jdbcType=BIGINT}
          </if>
        </foreach>
      </trim>
      <trim prefix="update_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.updateTime != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.updateTime,jdbcType=BIGINT}
          </if>
        </foreach>
      </trim>
    </trim>
    where id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.id,jdbcType=BIGINT}
    </foreach>
  </update>
  <insert id="batchInsert" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into t_task
    (department_id, task_code, material_total, allocation_status, finish_status, finish_time, 
      create_id, update_id, create_time, update_time)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.departmentId,jdbcType=BIGINT}, #{item.taskCode,jdbcType=VARCHAR}, #{item.materialTotal,jdbcType=INTEGER}, 
        #{item.allocationStatus,jdbcType=TINYINT}, #{item.finishStatus,jdbcType=TINYINT}, 
        #{item.finishTime,jdbcType=BIGINT}, #{item.createId,jdbcType=BIGINT}, #{item.updateId,jdbcType=BIGINT}, 
        #{item.createTime,jdbcType=BIGINT}, #{item.updateTime,jdbcType=BIGINT})
    </foreach>
  </insert>
</mapper>